# Welcome to Graphcool!
#
# This file is the main config file for your Graphcool Project.
# It's very minimal at this point and uses default values.
# We've included a hello world function here.
# Just uncomment it and run `graphcool deploy`
#
# Check out some examples:
#    github.com/graphcool/examples
#
# Happy Coding!


# GraphQL types
types: ./types.graphql


# uncomment this:

functions:
  event-trigger-service:
    type: subscription
    query: ./code/subscriptions/event/trigger-service/subscription.graphql
    handler:
      code:
        src: ./code/subscriptions/event/trigger-service/index.js
        environment:
          GRAPHCOOL_PROJECT_ID: ${env:GRAPHCOOL_PROJECT_ID}
          GRAPHCOOL_SECRET: ${env:GRAPHCOOL_SECRET}
          DASHBOARD_URL: ${env:DASHBOARD_URL}
  invitation-send-email:
    type: subscription
    query: ./code/subscriptions/invitation/send-email/subscription.graphql
    handler:
      code:
        src: ./code/subscriptions/invitation/send-email/index.js
        environment:
          SENDGRID_SECRET: ${env:SENDGRID_SECRET}
  invitation-add-to-project:
    type: subscription
    query: ./code/subscriptions/invitation/add-to-project/subscription.graphql
    handler:
      code:
        src: ./code/subscriptions/invitation/add-to-project/index.js
        environment:
          GRAPHCOOL_PROJECT_ID: ${env:GRAPHCOOL_PROJECT_ID}
          GRAPHCOOL_SECRET: ${env:GRAPHCOOL_SECRET}
  notification-notify-team:
    type: subscription
    query: ./code/subscriptions/notification/notify-team/subscription.graphql
    handler:
      code:
        src: ./code/subscriptions/notification/notify-team/index.js
        environment:
          SENDGRID_SECRET: ${env:SENDGRID_SECRET}
  project-assign-plan:
    type: subscription
    query: ./code/subscriptions/project/assign-plan/subscription.graphql
    handler:
      code:
        src: ./code/subscriptions/project/assign-plan/index.js
        environment:
          GRAPHCOOL_PROJECT_ID: ${env:GRAPHCOOL_PROJECT_ID}
          GRAPHCOOL_SECRET: ${env:GRAPHCOOL_SECRET}
  task-log-handle-error:
    type: subscription
    query: ./code/subscriptions/task-log/handle-error/subscription.graphql
    handler:
      code:
        src: ./code/subscriptions/task-log/handle-error/index.js
        environment:
          GRAPHCOOL_PROJECT_ID: ${env:GRAPHCOOL_PROJECT_ID}
          GRAPHCOOL_SECRET: ${env:GRAPHCOOL_SECRET}
          MAX_ERROR_COUNT: 10
          MAX_ERROR_DURATION: 30
  task-log-notify-when-error:
    type: subscription
    query: ./code/subscriptions/task-log/notify-when-error/subscription.graphql
    handler:
      code:
        src: ./code/subscriptions/task-log/notify-when-error/index.js
        environment:
          GRAPHCOOL_PROJECT_ID: ${env:GRAPHCOOL_PROJECT_ID}
          GRAPHCOOL_SECRET: ${env:GRAPHCOOL_SECRET}

 
# Graphcool modules
modules: 
  email-password: modules/email-password/graphcool.yml


# Model/Relation permissions
permissions:
- operation: "*"
# Basket permissions
# - operation: Basket.create
#   authenticated: true
# - operation: Basket.read
#   authenticated: true
#   query: permissions/Basket.graphql
# - operation: Basket.update
#   authenticated: true
#   query: permissions/Basket.graphql
# - operation: Basket.delete
#   authenticated: true
#   query: permissions/Basket.graphql

# # Item permissions
# - operation: Item.read
# - operation: Item.create
#   authenticated: true
#   query: permissions/Item.graphql

  
# Permanent Auth Token / Root Tokens
rootTokens:
  - functions

