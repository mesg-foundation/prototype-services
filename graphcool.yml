types: ./types.graphql
functions:
  trigger-service:
    handler:
      code:
        src: src/functions/trigger-service/index.ts
        environment:
          DASHBOARD_URL: ${env:DASHBOARD_URL}
    type: subscription
    query: src/functions/trigger-service/subscription.graphql
  handle-trigger-error:
    handler:
      code:
        src: src/functions/handle-trigger-error/index.ts
        environment:
          MAX_ERROR_COUNT: 10
          MAX_ERROR_DURATION: 30
    type: subscription
    query: src/functions/handle-trigger-error/subscription.graphql
  notify-on-trigger-error:
    handler:
      code:
        src: src/functions/notify-on-trigger-error/index.ts
    type: subscription
    query: src/functions/notify-on-trigger-error/subscription.graphql
  validate-action-data-on-create:
    handler:
      code:
        src: src/functions/validate-action-data/index.ts
    type: operationBefore
    operation: Action.create
  notify-team:
    handler:
      code:
        src: src/functions/notify-team/index.ts
        environment:
          SENDGRID_SECRET: ${env:SENDGRID_SECRET}
    type: subscription
    query: src/functions/notify-team/subscription.graphql
  validate-action-data-on-update:
    handler:
      code:
        src: src/functions/validate-action-data/index.ts
    type: operationBefore
    operation: Action.update
  invitation-send-email:
    handler:
      code:
        src: src/functions/send-invitation-email/index.ts
        environment:
          SENDGRID_SECRET: ${env:SENDGRID_SECRET}
    type: subscription
    query: src/functions/send-invitation-email/subscription.graphql
  invite-to-project:
    handler:
      code:
        src: src/functions/invite-to-project/index.ts
    type: subscription
    query: src/functions/invite-to-project/subscription.graphql
  logged-in-user:
    handler:
      code:
        src: src/functions/logged-in-user/index.ts
    type: resolver
    schema: src/functions/logged-in-user/schema.graphql
  authenticate:
    handler:
      code:
        src: src/functions/authenticate/index.ts
    type: resolver
    schema: src/functions/authenticate/schema.graphql
  signup:
    handler:
      code:
        src: src/functions/signup/index.ts
    type: resolver
    schema: src/functions/signup/schema.graphql
  assign-plan:
    handler:
      code:
        src: src/functions/assign-plan/index.ts
    type: subscription
    query: src/functions/assign-plan/subscription.graphql
permissions:
- operation: Action.create
  authenticated: true
  query: ./src/permissions/Action.graphql:create
- operation: Action.update
  authenticated: true
  query: ./src/permissions/Action.graphql:update
- operation: Action.read
  authenticated: true
  query: ./src/permissions/Action.graphql:read
- operation: Connector.create
  authenticated: true
  query: ./src/permissions/Connector.graphql:create
- operation: Connector.update
  authenticated: true
  query: ./src/permissions/Connector.graphql:update
- operation: Connector.read
  authenticated: true
  query: ./src/permissions/Connector.graphql:read
- operation: Contract.create
  authenticated: true
  query: ./src/permissions/Contract.graphql:create
  fields:
  - public
  - address
  - abi
  - chain
  - name
  - description
- operation: Contract.read
  authenticated: true
  query: ./src/permissions/Contract.graphql:read
- operation: Contract.read
  query: ./src/permissions/Contract.graphql:readPublic
- operation: Contract.update
  authenticated: true
  query: ./src/permissions/Contract.graphql:update
  fields:
  - public
  - abi
  - chain
  - name
  - description
- operation: EthereumContractConnector.read
  authenticated: true
  query: ./src/permissions/EthereumContractConnector.graphql:read
- operation: EthereumTransactionConnector.read
  authenticated: true
  query: ./src/permissions/EthereumTransactionConnector.graphql:read
- operation: EthereumTokenConnector.read
  authenticated: true
  query: ./src/permissions/EthereumTokenConnector.graphql:read
- operation: Event.create
  authenticated: true
  query: ./src/permissions/Event.graphql:create
- operation: Event.read
  authenticated: true
  query: ./src/permissions/Event.graphql:read
- operation: Invitation.create
  authenticated: true
  query: ./src/permissions/Invitation.graphql:create
- operation: Invitation.read
  authenticated: true
  query: ./src/permissions/Invitation.graphql:read
- operation: Plan.read
- operation: Project.create
  authenticated: true
  query: ./src/permissions/Project.graphql:create
- operation: Project.read
  authenticated: true
  query: ./src/permissions/Project.graphql:read
- operation: Project.update
  authenticated: true
  query: ./src/permissions/Project.graphql:update
  fields:
  - name
- operation: Project.delete
  authenticated: true
  query: ./src/permissions/Project.graphql:delete
- operation: Service.read
  fields:
  - id
  - key
  - name
  - description
  - data
  - picture
- operation: TaskLog.read
  authenticated: true
  query: ./src/permissions/TaskLog.graphql:read
- operation: Trigger.create
  authenticated: true
  query: ./src/permissions/Trigger.graphql:create
- operation: Trigger.read
  authenticated: true
  query: ./src/permissions/Trigger.graphql:read
- operation: Trigger.update
  authenticated: true
  query: ./src/permissions/Trigger.graphql:update
- operation: Trigger.delete
  authenticated: true
  query: ./src/permissions/Trigger.graphql:delete
- operation: User.create
- operation: User.read
  fields:
  - id
- operation: User.read
  authenticated: true
  query: ./src/permissions/User.graphql:read3
- operation: ActionOnProject.connect
  authenticated: true
- operation: ActionOnTriggers.connect
  authenticated: true
- operation: ConnectorOnContracts.connect
  authenticated: true
- operation: ConnectorTokenOnContracts.connect
  authenticated: true
- operation: ConnectorOnProject.connect
  authenticated: true
- operation: ConnectorOnTriggers.connect
  authenticated: true
- operation: EthereumContractOnConnectors.connect
  authenticated: true
- operation: EthereumTransactionOnConnectors.connect
  authenticated: true
- operation: EthereumTokenOnConnectors.connect
  authenticated: true
- operation: EventOnTrigger.connect
  authenticated: true
  query: ./src/permissions/EventOnTrigger.graphql:connect
- operation: InvitationOnProject.connect
  authenticated: true
  query: ./src/permissions/InvitationOnProject.graphql:connect
- operation: ProjectOnContract.connect
  authenticated: true
  query: ./src/permissions/ProjectOnContract.graphql:connect
- operation: ProjectOnUser.connect
  authenticated: true
  query: ./src/permissions/ProjectOnUser.graphql:connect
- operation: ServiceOnAction.connect
  authenticated: true
- operation: TriggerOnProject.connect
  authenticated: true
  query: ./src/permissions/TriggerOnProject.graphql:connect
rootTokens:
- functions
- signup
- authenticate
- logged-in-user
- prod-listener