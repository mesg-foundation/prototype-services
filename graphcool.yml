# GraphQL types
types: ./types.graphql

functions:

  # ================================================================================= 
  # TODO
  # enable this when the issue https://github.com/graphcool/graphcool/issues/818
  # is fixed from graphcool
  # ================================================================================= 
  # action-data-validation-on-update:
  #   type: operationBefore
  #   operation: Action.update
  #   schema: ./app/actions/functions/validate-data/schema.graphql
  #   handler:
  #     code:
  #       src: ./app/actions/functions/validate-data/index.js
  # action-data-validation-on-create:
  #   type: operationBefore
  #   operation: Action.create
  #   schema: ./app/actions/functions/validate-data/schema.graphql
  #   handler:
  #     code:
  #       src: ./app/actions/functions/validate-data/index.js
  signup:
    type: resolver
    schema: ./app/email-password/schemas/signup.graphql
    handler:
      code:
        src: ./app/email-password/code/signup.js
  authenticate:
    type: resolver
    schema: ./app/email-password/schemas/authenticate.graphql
    handler:
      code:
        src: ./app/email-password/code/authenticate.js
  loggednInUser:
    type: resolver
    schema: ./app/email-password/schemas/loggedInUser.graphql
    handler:
      code:
        src: ./app/email-password/code/loggedInUser.js   
  event-trigger-service:
    type: subscription
    query: ./app/events/functions/trigger-service/subscription.graphql
    handler:
      code:
        src: ./app/events/functions/trigger-service/index.js
        environment:
          DASHBOARD_URL: ${env:DASHBOARD_URL}
  invitation-send-email:
    type: subscription
    query: ./app/invitations/functions/send-email/subscription.graphql
    handler:
      code:
        src: ./app/invitations/functions/send-email/index.js
        environment:
          SENDGRID_SECRET: ${env:SENDGRID_SECRET}
  invitation-add-to-project:
    type: subscription
    query: ./app/invitations/functions/add-to-project/subscription.graphql
    handler:
      code:
        src: ./app/invitations/functions/add-to-project/index.js
  task-log-handle-error:
    type: subscription
    query: ./app/logs/functions/handle-error/subscription.graphql
    handler:
      code:
        src: ./app/logs/functions/handle-error/index.js
        environment:
          MAX_ERROR_COUNT: 10
          MAX_ERROR_DURATION: 30
  task-log-notify-when-error:
    type: subscription
    query: ./app/logs/functions/notify-when-error/subscription.graphql
    handler:
      code:
        src: ./app/logs/functions/notify-when-error/index.js
  notification-notify-team:
    type: subscription
    query: ./app/notifications/functions/notify-team/subscription.graphql
    handler:
      code:
        src: ./app/notifications/functions/notify-team/index.js
        environment:
          SENDGRID_SECRET: ${env:SENDGRID_SECRET}
  project-assign-plan:
    type: subscription
    query: ./app/plans/functions/assign-plan/subscription.graphql
    handler:
      code:
        src: ./app/plans/functions/assign-plan/index.js

permissions:
# === Actions
- operation: Action.create
  authenticated: true
  query: ./app/actions/permissions/create.graphql
- operation: Action.update
  authenticated: true
  query: ./app/actions/permissions/update.graphql
- operation: Action.read
  authenticated: true
  query: ./app/actions/permissions/read.graphql

# === Connector
- operation: Connector.create
  authenticated: true
  query: ./app/blockchain-connectors/permissions/Connector/create.graphql
- operation: Connector.update
  authenticated: true
  query: ./app/blockchain-connectors/permissions/Connector/update.graphql
- operation: Connector.read
  authenticated: true
  query: ./app/blockchain-connectors/permissions/Connector/read.graphql

# === EthereumContractConnector
- operation: EthereumContractConnector.read
  authenticated: true
  query: ./app/blockchain-connectors/permissions/EthereumContractConnector/read.graphql

# === EthereumTransactionConnector
- operation: EthereumTransactionConnector.read
  authenticated: true
  query: ./app/blockchain-connectors/permissions/EthereumTransactionConnector/read.graphql

# === EthereumContractOnConnectors
- operation: EthereumContractOnConnectors.connect
  authenticated: true

# === EthereumTransactionOnConnectors
- operation: EthereumTransactionOnConnectors.connect
  authenticated: true

# === Contract
- operation: Contract.create
  authenticated: true
  query: ./app/contracts/permissions/create.graphql
- operation: Contract.read
  authenticated: true
  query: ./app/contracts/permissions/read.graphql
- operation: Contract.update
  authenticated: true
  query: ./app/contracts/permissions/update.graphql
  fields:
    - public
    - abi
    - chain
    - name
    - description

# === User
- operation: User.create
- operation: User.read

# === Event
- operation: Event.create
  authenticated: true
  query: ./app/events/permissions/create.graphql
- operation: Event.read
  authenticated: true
  query: ./app/events/permissions/read.graphql

# === Invitations
- operation: Invitation.create
  authenticated: true
  query: ./app/invitations/permissions/create.graphql
- operation: Invitation.read
  authenticated: true
  query: ./app/invitations/permissions/read.graphql
- operation: InvitationOnProject.connect
  authenticated: true
  query: ./app/invitations/permissions/connect.graphql

# === Logs
- operation: TaskLog.read
  authenticated: true
  query: ./app/logs/permissions/read.graphql

# === Plans
- operation: Plan.read

# === Projects
- operation: Project.create
  authenticated: true
  query: ./app/projects/permissions/create.graphql
- operation: Project.read
  authenticated: true
  query: ./app/projects/permissions/read.graphql
- operation: Project.update
  authenticated: true
  query: ./app/projects/permissions/update.graphql
  fields:
    - name
- operation: Project.delete
  authenticated: true
  query: ./app/projects/permissions/delete.graphql

# === Service
- operation: Service.read
  fields:
    - id
    - key
    - name
    - description
    - data
    - picture

# === Triggers
- operation: Trigger.create
  authenticated: true
  query: ./app/triggers/permissions/create.graphql
- operation: Trigger.read
  authenticated: true
  query: ./app/triggers/permissions/sameProject.graphql
- operation: Trigger.update
  authenticated: true
  query: ./app/triggers/permissions/sameProject.graphql
- operation: Trigger.delete
  authenticated: true
  query: ./app/triggers/permissions/sameProject.graphql

# === Users
- operation: User.create
- operation: User.read
  authenticated: true
  query: ./app/users/permissions/read.graphql
- operation: User.read
  fields:
    - id

- operation: ConnectorOnTriggers.connect
  authenticated: true
  # query: ... TODO

- operation: ActionOnTriggers.connect
  authenticated: true
  # query: ... TODO

- operation: ServiceOnAction.connect
  authenticated: true
  # query: ... TODO

- operation: ActionOnProject.connect
  authenticated: true
  # query: ... TODO

# === ConnectorOnProject
- operation: ConnectorOnProject.connect
  authenticated: true
  # query: ./permissions/ConnectorOnProject/connect.graphql TODO

# === ConnectorOnContracts
- operation: ConnectorOnContracts.connect
  authenticated: true

# === ProjectOnUser
- operation: ProjectOnUser.connect
  authenticated: true
  query: ./permissions/ProjectOnUser/connect.graphql

# === TriggerOnProject
- operation: TriggerOnProject.connect
  authenticated: true
  query: ./permissions/TriggerOnProject/connect.graphql

# === ProjectOnContract
- operation: ProjectOnContract.connect
  authenticated: true
  query: ./permissions/ProjectOnContract/connect.graphql

# === EventOnTrigger
- operation: EventOnTrigger.connect
  authenticated: true
  query: ./permissions/EventOnTrigger/connect.graphql  

# ======================
# ======= TOKENS =======
# ======================


# Permanent Auth Token / Root Tokens
rootTokens:
  - functions
  - signup
  - authenticate
