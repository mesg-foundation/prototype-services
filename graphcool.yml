# GraphQL types
types: ./types.graphql

functions:
  task-log-handle-error:
    type: subscription
    query: ./code/subscriptions/task-log/handle-error/subscription.graphql
    handler:
      code:
        src: ./code/subscriptions/task-log/handle-error/index.js
        environment:
          MAX_ERROR_COUNT: 10
          MAX_ERROR_DURATION: 30
  task-log-notify-when-error:
    type: subscription
    query: ./code/subscriptions/task-log/notify-when-error/subscription.graphql
    handler:
      code:
        src: ./code/subscriptions/task-log/notify-when-error/index.js
 
# Graphcool modules
modules: 
  email-password: modules/email-password/graphcool.yml
  invitation: modules/invitation/graphcool.yml
  blockchain-connectors: modules/blockchain-connectors/graphcool.yml
  service: modules/service/graphcool.yml
  plans: modules/plans/graphcool.yml
  notifications: modules/notifications/graphcool.yml
  project: modules/project/graphcool.yml
  contracts: modules/contracts/graphcool.yml
  events: modules/events/graphcool.yml


# Model/Relation permissions
permissions:

# ====================================
# ======= PERMISSION FOR TYPES =======
# ====================================

# === Action
- operation: Action.create
  authenticated: true
  query: permissions/types/Action/create.graphql
- operation: Action.update
  authenticated: true
  query: permissions/types/Action/update.graphql
- operation: Action.read
  authenticated: true
  query: permissions/types/Action/read.graphql

# === TaskLog
- operation: TaskLog.read
  authenticated: true
  query: permissions/types/TaskLog/read.graphql

# === Trigger
- operation: Trigger.create
  authenticated: true
  query: permissions/types/Trigger/create.graphql
- operation: Trigger.read
  authenticated: true
  query: permissions/types/Trigger/read.graphql
- operation: Trigger.update
  authenticated: true
  query: permissions/types/Trigger/update.graphql

# === User permissions
- operation: User.create
- operation: User.read
  authenticated: true
  query: permissions/types/User/read.graphql
- operation: User.read
  fields:
    - id


# ========================================
# ======= PERMISSION FOR RELATIONS =======
# ========================================

- operation: ConnectorOnTriggers.connect
  authenticated: true
  # query: ... TODO

- operation: ActionOnTriggers.connect
  authenticated: true
  # query: ... TODO

- operation: ServiceOnAction.connect
  authenticated: true
  # query: ... TODO

- operation: ActionOnProject.connect
  authenticated: true
  # query: ... TODO

# === ConnectorOnProject
- operation: ConnectorOnProject.connect
  authenticated: true
  # query: permissions/relations/ConnectorOnProject/connect.graphql TODO

# === ConnectorOnContracts
- operation: ConnectorOnContracts.connect
  authenticated: true

# === TriggerOnContract
- operation: TriggerOnContract.connect
  authenticated: true
  query: permissions/relations/TriggerOnContract/connect.graphql

# === ProjectOnUser
- operation: ProjectOnUser.connect
  authenticated: true
  query: permissions/relations/ProjectOnUser/connect.graphql

# === TriggerOnProject
- operation: TriggerOnProject.connect
  authenticated: true
  query: permissions/relations/TriggerOnProject/connect.graphql

# === ProjectOnContract
- operation: ProjectOnContract.connect
  authenticated: true
  query: permissions/relations/ProjectOnContract/connect.graphql

# === EventOnTrigger
- operation: EventOnTrigger.connect
  authenticated: true
  query: permissions/relations/EventOnTrigger/connect.graphql

# === TriggerOnService
- operation: TriggerOnService.connect
  authenticated: true
  query: permissions/relations/TriggerOnService/connect.graphql
- operation: TriggerOnService.disconnect
  authenticated: true
  query: permissions/relations/TriggerOnService/connect.graphql
  

# ======================
# ======= TOKENS =======
# ======================


# Permanent Auth Token / Root Tokens
rootTokens:
  - functions

