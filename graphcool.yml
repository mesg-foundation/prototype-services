# Welcome to Graphcool!
#
# This file is the main config file for your Graphcool Project.
# It's very minimal at this point and uses default values.
# We've included a hello world function here.
# Just uncomment it and run `graphcool deploy`
#
# Check out some examples:
#    github.com/graphcool/examples
#
# Happy Coding!


# GraphQL types
types: ./types.graphql


# uncomment this:

functions:
  event-trigger-service:
    type: subscription
    query: ./code/subscriptions/event/trigger-service/subscription.graphql
    handler:
      code:
        src: ./code/subscriptions/event/trigger-service/index.js
        environment:
          DASHBOARD_URL: ${env:DASHBOARD_URL}
  invitation-send-email:
    type: subscription
    query: ./code/subscriptions/invitation/send-email/subscription.graphql
    handler:
      code:
        src: ./code/subscriptions/invitation/send-email/index.js
        environment:
          SENDGRID_SECRET: ${env:SENDGRID_SECRET}
  invitation-add-to-project:
    type: subscription
    query: ./code/subscriptions/invitation/add-to-project/subscription.graphql
    handler:
      code:
        src: ./code/subscriptions/invitation/add-to-project/index.js
  notification-notify-team:
    type: subscription
    query: ./code/subscriptions/notification/notify-team/subscription.graphql
    handler:
      code:
        src: ./code/subscriptions/notification/notify-team/index.js
        environment:
          SENDGRID_SECRET: ${env:SENDGRID_SECRET}
  project-assign-plan:
    type: subscription
    query: ./code/subscriptions/project/assign-plan/subscription.graphql
    handler:
      code:
        src: ./code/subscriptions/project/assign-plan/index.js
  task-log-handle-error:
    type: subscription
    query: ./code/subscriptions/task-log/handle-error/subscription.graphql
    handler:
      code:
        src: ./code/subscriptions/task-log/handle-error/index.js
        environment:
          MAX_ERROR_COUNT: 10
          MAX_ERROR_DURATION: 30
  task-log-notify-when-error:
    type: subscription
    query: ./code/subscriptions/task-log/notify-when-error/subscription.graphql
    handler:
      code:
        src: ./code/subscriptions/task-log/notify-when-error/index.js
 
# Graphcool modules
modules: 
  email-password: modules/email-password/graphcool.yml


# Model/Relation permissions
permissions:

# ====================================
# ======= PERMISSION FOR TYPES =======
# ====================================

# === Connector
- operation: Connector.create
  authenticated: true
  query: permissions/types/Connector/create.graphql
- operation: Connector.update
  authenticated: true
  query: permissions/types/Connector/update.graphql
- operation: Connector.read
  authenticated: true
  query: permissions/types/Connector/read.graphql

# === Contract
- operation: Contract.create
  authenticated: true
  query: permissions/types/Contract/create.graphql
- operation: Contract.read
  authenticated: true
  query: permissions/types/Contract/read.graphql
- operation: Contract.update
  authenticated: true
  query: permissions/types/Contract/update.graphql
  fields:
    - public
    - abi
    - chain
    - name
    - description

# === Event
- operation: Event.create
  authenticated: true
  query: permissions/types/Event/create.graphql
- operation: Event.read
  authenticated: true
  query: permissions/types/Event/read.graphql

# === EthereumContractConnector
- operation: EthereumContractConnector.read
  authenticated: true
  query: permissions/types/EthereumContractConnector/read.graphql

# === Invitation
- operation: Invitation.create
  authenticated: true
  query: permissions/types/Invitation/create.graphql
- operation: Invitation.read
  authenticated: true
  query: permissions/types/Invitation/read.graphql

# === Plan
- operation: Plan.read

# === Project
- operation: Project.create
  authenticated: true
  query: permissions/types/Project/create.graphql
- operation: Project.read
  authenticated: true
  query: permissions/types/Project/read.graphql
- operation: Project.update
  authenticated: true
  query: permissions/types/Project/update.graphql
  fields:
    - name
- operation: Project.delete
  authenticated: true
  query: permissions/types/Project/delete.graphql

# === Service
- operation: Service.read
  fields:
    - id
    - key
    - name
    - description
    - data
    - picture

# === TaskLog
- operation: TaskLog.read
  authenticated: true
  query: permissions/types/TaskLog/read.graphql

# === Trigger
- operation: Trigger.create
  authenticated: true
  query: permissions/types/Trigger/create.graphql
- operation: Trigger.read
  authenticated: true
  query: permissions/types/Trigger/read.graphql
- operation: Trigger.update
  authenticated: true
  query: permissions/types/Trigger/update.graphql

# === User permissions
- operation: User.create
- operation: User.read
  authenticated: true
  query: permissions/types/User/read.graphql
- operation: User.read
  fields:
    - id


# ========================================
# ======= PERMISSION FOR RELATIONS =======
# ========================================

# === ConnectorOnTriggers
- operation: ConnectorOnTriggers.connect
  authenticated: true
  # query: permissions/relations/ConnectorOnTriggers/connect.graphql TODO

# === ConnectorOnProject
- operation: ConnectorOnProject.connect
  authenticated: true
  # query: permissions/relations/ConnectorOnProject/connect.graphql TODO

# === EthereumContractOnConnectors
- operation: EthereumContractOnConnectors.connect
  authenticated: true

# === ConnectorOnContracts
- operation: ConnectorOnContracts.connect
  authenticated: true

# === TriggerOnContract
- operation: TriggerOnContract.connect
  authenticated: true
  query: permissions/relations/TriggerOnContract/connect.graphql

# === ProjectOnUser
- operation: ProjectOnUser.connect
  authenticated: true
  query: permissions/relations/ProjectOnUser/connect.graphql

# === TriggerOnProject
- operation: TriggerOnProject.connect
  authenticated: true
  query: permissions/relations/TriggerOnProject/connect.graphql

# === ProjectOnContract
- operation: ProjectOnContract.connect
  authenticated: true
  query: permissions/relations/ProjectOnContract/connect.graphql

# === EventOnTrigger
- operation: EventOnTrigger.connect
  authenticated: true
  query: permissions/relations/EventOnTrigger/connect.graphql

# === InvitationOnProject
- operation: InvitationOnProject.connect
  authenticated: true
  query: permissions/relations/InvitationOnProject/connect.graphql

# === TriggerOnService
- operation: TriggerOnService.connect
  authenticated: true
  query: permissions/relations/TriggerOnService/connect.graphql
- operation: TriggerOnService.disconnect
  authenticated: true
  query: permissions/relations/TriggerOnService/connect.graphql
  

# ======================
# ======= TOKENS =======
# ======================


# Permanent Auth Token / Root Tokens
rootTokens:
  - functions

