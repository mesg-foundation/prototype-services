# This file contains the GraphQL Types

# All types need to have the three fields id, updatedAt and createdAt like this:

type User implements Node {
  createdAt: DateTime!
  email: String @isUnique
  id: ID! @isUnique
  password: String
  updatedAt: DateTime!
  projects: [Project!]! @relation(name: "ProjectOnUser")
}


# Graphcool has one special type, the File type:

# type File implements Node {
#   contentType: String!
#   createdAt: DateTime!
#   id: ID! @isUnique
#   name: String!
#   secret: String! @isUnique
#   size: Int!
#   updatedAt: DateTime!
#   url: String! @isUnique
# }

type Action implements Node {
  createdAt: DateTime!
  id: ID! @isUnique
  updatedAt: DateTime!
  project: Project! @relation(name: "ActionOnProject")
  service: Service @relation(name: "ServiceOnAction")
  triggers: [Trigger!]! @relation(name: "ActionOnTriggers")
  data: Json
}

type Trigger implements Node {
  createdAt: DateTime!
  id: ID! @isUnique
  title: String
  description: String
  enable: Boolean @defaultValue(value: true)
  updatedAt: DateTime!
  connector: Connector! @relation(name: "ConnectorOnTriggers")
  project: Project! @relation(name: "TriggerOnProject")
  events: [Event!]! @relation(name: "EventOnTrigger")
  taskLogs: [TaskLog!]! @relation(name: "TastLogOnTrigger")
  notifications: [Notification!]! @relation(name: "NotificationOnTrigger")
  action: Action! @relation(name: "ActionOnTriggers")
}

type TaskLog implements Node {
  body: String
  code: String!
  createdAt: DateTime!
  id: ID! @isUnique
  updatedAt: DateTime!
  trigger: Trigger @relation(name: "TastLogOnTrigger")
  event: Event @relation(name: "EventOnTaskLogs")
  duration: Int @defaultValue(value: 0)
}

type Event implements Node {
  createdAt: DateTime!
  id: ID! @isUnique
  payload: Json!
  transactionId: String!
  blockId: String!
  from: String!
  to: String!
  value: String!
  fees: String!
  updatedAt: DateTime!
  trigger: Trigger @relation(name: "EventOnTrigger")
  taskLogs: [TaskLog!]! @relation(name: "EventOnTaskLogs")
}

enum ETHEREUM_BLOCKCHAIN {
  HOMESTEAD
  MAINNET
  TESTNET
  KOVAN
}
